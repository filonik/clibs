
#
# This file is autogenerated.
#

cdef extern from "tesselator.h":

	#
	# Defines:
	#

	cdef int TESS_UNDEF 

	#
	# Typedefs:
	#

	ctypedef float TESSreal
	ctypedef int TESSindex
	

	#
	# Enums:
	#

	cdef enum TessWindingRule:
		TESS_WINDING_ODD=0
		TESS_WINDING_NONZERO=1
		TESS_WINDING_POSITIVE=2
		TESS_WINDING_NEGATIVE=3
		TESS_WINDING_ABS_GEQ_TWO=4
	
	cdef enum TessElementType:
		TESS_POLYGONS=0
		TESS_CONNECTED_POLYGONS=1
		TESS_BOUNDARY_CONTOURS=2
	

	#
	# Structs:
	#

	cdef struct TESSalloc:
		#void * (*)( void *,unsigned int ) *** memalloc
		#void * (*)( void *,void *,unsigned int ) *** memrealloc
		#void (*)( void *,void * ) *** memfree
		void* userData
		int meshEdgeBucketSize
		int meshVertexBucketSize
		int meshFaceBucketSize
		int dictNodeBucketSize
		int regionBucketSize
		int extraVertices
	
	cdef struct TESStesselator:
		pass
	

	#
	# Functions:
	#

	int tessGetElementCount(TESStesselator* tess)
	void tessAddContour(TESStesselator* tess,int size,const void* pointer,int stride,int count)
	const int* tessGetElements(TESStesselator* tess)
	TESStesselator* tessNewTess(TESSalloc* alloc)
	void tessDeleteTess(TESStesselator* tess)
	int tessGetVertexCount(TESStesselator* tess)
	int tessTesselate(TESStesselator* tess,int windingRule,int elementType,int polySize,int vertexSize,const float* normal)
	const float* tessGetVertices(TESStesselator* tess)

	#
	# Supplements:
	#


