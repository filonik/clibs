
#
# This file is autogenerated.
#


cimport mcpp_lib_defs

from libc.stdlib cimport malloc, free
from cpython.string cimport PyString_AsString

cpdef enum OUTDEST:
    OUT=mcpp_lib_defs.OUT
    ERR=mcpp_lib_defs.ERR
    DBG=mcpp_lib_defs.DBG

def mcpp_reset_def_out_func():
    mcpp_lib_defs.mcpp_reset_def_out_func()

def mcpp_set_out_func():
    raise NotImplementedError
    
def mcpp_get_mem_buffer(OUTDEST od):
    cdef:
        char* buffer = mcpp_lib_defs.mcpp_get_mem_buffer(od)
    
    if buffer is NULL:
        return None
    
    return buffer
    
def mcpp_use_mem_buffers(int tf):
    mcpp_lib_defs.mcpp_use_mem_buffers(tf)

def mcpp_lib_main(argv):
    cdef:
        int cret
        int cargc = len(argv)
        char **cargv = <char**>malloc(cargc * sizeof(char*))
    
    for i in range(cargc):
        cargv[i] = PyString_AsString(argv[i])
        
    cret = mcpp_lib_defs.mcpp_lib_main(cargc, cargv)
    
    free(cargv)
    
    return cret

def mcpp_preprocess(*args):
    mcpp_use_mem_buffers(1)
    
    if mcpp_lib_main(('',) + args) != 0:
        raise RuntimeError(mcpp_get_mem_buffer(ERR))
    
    return mcpp_get_mem_buffer(OUT)
