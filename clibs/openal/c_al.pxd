
#
# This file is autogenerated.
#

cdef extern from "OpenAL/al.h":

	#
	# Defines:
	#

	cdef int AL_INVALID
	cdef int AL_ILLEGAL_ENUM
	cdef int AL_ILLEGAL_COMMAND
	cdef int AL_NONE
	cdef int AL_FALSE
	cdef int AL_TRUE
	cdef int AL_SOURCE_RELATIVE
	cdef int AL_CONE_INNER_ANGLE
	cdef int AL_CONE_OUTER_ANGLE
	cdef int AL_PITCH
	cdef int AL_POSITION
	cdef int AL_DIRECTION
	cdef int AL_VELOCITY
	cdef int AL_LOOPING
	cdef int AL_BUFFER
	cdef int AL_GAIN
	cdef int AL_MIN_GAIN
	cdef int AL_MAX_GAIN
	cdef int AL_ORIENTATION
	cdef int AL_SOURCE_STATE
	cdef int AL_INITIAL
	cdef int AL_PLAYING
	cdef int AL_PAUSED
	cdef int AL_STOPPED
	cdef int AL_BUFFERS_QUEUED
	cdef int AL_BUFFERS_PROCESSED
	cdef int AL_SEC_OFFSET
	cdef int AL_SAMPLE_OFFSET
	cdef int AL_BYTE_OFFSET
	cdef int AL_SOURCE_TYPE
	cdef int AL_STATIC
	cdef int AL_STREAMING
	cdef int AL_UNDETERMINED
	cdef int AL_FORMAT_MONO8
	cdef int AL_FORMAT_MONO16
	cdef int AL_FORMAT_STEREO8
	cdef int AL_FORMAT_STEREO16
	cdef int AL_REFERENCE_DISTANCE
	cdef int AL_ROLLOFF_FACTOR
	cdef int AL_CONE_OUTER_GAIN
	cdef int AL_MAX_DISTANCE
	cdef int AL_FREQUENCY
	cdef int AL_BITS
	cdef int AL_CHANNELS
	cdef int AL_SIZE
	cdef int AL_UNUSED
	cdef int AL_PENDING
	cdef int AL_PROCESSED
	cdef int AL_NO_ERROR
	cdef int AL_INVALID_NAME
	cdef int AL_INVALID_ENUM
	cdef int AL_INVALID_VALUE
	cdef int AL_INVALID_OPERATION
	cdef int AL_OUT_OF_MEMORY
	cdef int AL_VENDOR
	cdef int AL_VERSION
	cdef int AL_RENDERER
	cdef int AL_EXTENSIONS
	cdef int AL_DOPPLER_FACTOR
	cdef int AL_DOPPLER_VELOCITY
	cdef int AL_SPEED_OF_SOUND
	cdef int AL_DISTANCE_MODEL
	cdef int AL_INVERSE_DISTANCE
	cdef int AL_INVERSE_DISTANCE_CLAMPED
	cdef int AL_LINEAR_DISTANCE
	cdef int AL_LINEAR_DISTANCE_CLAMPED
	cdef int AL_EXPONENT_DISTANCE
	cdef int AL_EXPONENT_DISTANCE_CLAMPED

	#
	# Typedefs:
	#

	ctypedef char ALboolean
	ctypedef char ALchar
	ctypedef char ALbyte
	ctypedef unsigned char ALubyte
	ctypedef short int ALshort
	ctypedef short unsigned int ALushort
	ctypedef int ALint
	ctypedef unsigned int ALuint
	ctypedef int ALsizei
	ctypedef int ALenum
	
	ctypedef float ALfloat
	ctypedef double ALdouble
	ctypedef void ALvoid
	
	ctypedef void (* LPALENABLE)(ALenum)
	ctypedef void (* LPALDISABLE)(ALenum)
	ctypedef ALboolean (* LPALISENABLED)(ALenum)
	ctypedef const ALchar * (* LPALGETSTRING)(ALenum)
	ctypedef void (* LPALGETBOOLEANV)(ALenum,ALboolean *)
	ctypedef void (* LPALGETINTEGERV)(ALenum,ALint *)
	ctypedef void (* LPALGETFLOATV)(ALenum,ALfloat *)
	ctypedef void (* LPALGETDOUBLEV)(ALenum,ALdouble *)
	ctypedef ALboolean (* LPALGETBOOLEAN)(ALenum)
	ctypedef ALint (* LPALGETINTEGER)(ALenum)
	ctypedef ALfloat (* LPALGETFLOAT)(ALenum)
	ctypedef ALdouble (* LPALGETDOUBLE)(ALenum)
	ctypedef ALenum (* LPALGETERROR)()
	ctypedef ALboolean (* LPALISEXTENSIONPRESENT)(const ALchar *)
	ctypedef void * (* LPALGETPROCADDRESS)(const ALchar *)
	ctypedef ALenum (* LPALGETENUMVALUE)(const ALchar *)
	ctypedef void (* LPALLISTENERF)(ALenum,ALfloat)
	ctypedef void (* LPALLISTENER3F)(ALenum,ALfloat,ALfloat,ALfloat)
	ctypedef void (* LPALLISTENERFV)(ALenum,const ALfloat *)
	ctypedef void (* LPALLISTENERI)(ALenum,ALint)
	ctypedef void (* LPALLISTENER3I)(ALenum,ALint,ALint,ALint)
	ctypedef void (* LPALLISTENERIV)(ALenum,const ALint *)
	ctypedef void (* LPALGETLISTENERF)(ALenum,ALfloat *)
	ctypedef void (* LPALGETLISTENER3F)(ALenum,ALfloat *,ALfloat *,ALfloat *)
	ctypedef void (* LPALGETLISTENERFV)(ALenum,ALfloat *)
	ctypedef void (* LPALGETLISTENERI)(ALenum,ALint *)
	ctypedef void (* LPALGETLISTENER3I)(ALenum,ALint *,ALint *,ALint *)
	ctypedef void (* LPALGETLISTENERIV)(ALenum,ALint *)
	ctypedef void (* LPALGENSOURCES)(ALsizei,ALuint *)
	ctypedef void (* LPALDELETESOURCES)(ALsizei,const ALuint *)
	ctypedef ALboolean (* LPALISSOURCE)(ALuint)
	ctypedef void (* LPALSOURCEF)(ALuint,ALenum,ALfloat)
	ctypedef void (* LPALSOURCE3F)(ALuint,ALenum,ALfloat,ALfloat,ALfloat)
	ctypedef void (* LPALSOURCEFV)(ALuint,ALenum,const ALfloat *)
	ctypedef void (* LPALSOURCEI)(ALuint,ALenum,ALint)
	ctypedef void (* LPALSOURCE3I)(ALuint,ALenum,ALint,ALint,ALint)
	ctypedef void (* LPALSOURCEIV)(ALuint,ALenum,const ALint *)
	ctypedef void (* LPALGETSOURCEF)(ALuint,ALenum,ALfloat *)
	ctypedef void (* LPALGETSOURCE3F)(ALuint,ALenum,ALfloat *,ALfloat *,ALfloat *)
	ctypedef void (* LPALGETSOURCEFV)(ALuint,ALenum,ALfloat *)
	ctypedef void (* LPALGETSOURCEI)(ALuint,ALenum,ALint *)
	ctypedef void (* LPALGETSOURCE3I)(ALuint,ALenum,ALint *,ALint *,ALint *)
	ctypedef void (* LPALGETSOURCEIV)(ALuint,ALenum,ALint *)
	ctypedef void (* LPALSOURCEPLAYV)(ALsizei,const ALuint *)
	ctypedef void (* LPALSOURCESTOPV)(ALsizei,const ALuint *)
	ctypedef void (* LPALSOURCEREWINDV)(ALsizei,const ALuint *)
	ctypedef void (* LPALSOURCEPAUSEV)(ALsizei,const ALuint *)
	ctypedef void (* LPALSOURCEPLAY)(ALuint)
	ctypedef void (* LPALSOURCESTOP)(ALuint)
	ctypedef void (* LPALSOURCEREWIND)(ALuint)
	ctypedef void (* LPALSOURCEPAUSE)(ALuint)
	ctypedef void (* LPALSOURCEQUEUEBUFFERS)(ALuint,ALsizei,const ALuint *)
	ctypedef void (* LPALSOURCEUNQUEUEBUFFERS)(ALuint,ALsizei,ALuint *)
	ctypedef void (* LPALGENBUFFERS)(ALsizei,ALuint *)
	ctypedef void (* LPALDELETEBUFFERS)(ALsizei,const ALuint *)
	ctypedef ALboolean (* LPALISBUFFER)(ALuint)
	ctypedef void (* LPALBUFFERDATA)(ALuint,ALenum,const ALvoid *,ALsizei,ALsizei)
	ctypedef void (* LPALBUFFERF)(ALuint,ALenum,ALfloat)
	ctypedef void (* LPALBUFFER3F)(ALuint,ALenum,ALfloat,ALfloat,ALfloat)
	ctypedef void (* LPALBUFFERFV)(ALuint,ALenum,const ALfloat *)
	ctypedef void (* LPALBUFFERI)(ALuint,ALenum,ALint)
	ctypedef void (* LPALBUFFER3I)(ALuint,ALenum,ALint,ALint,ALint)
	ctypedef void (* LPALBUFFERIV)(ALuint,ALenum,const ALint *)
	ctypedef void (* LPALGETBUFFERF)(ALuint,ALenum,ALfloat *)
	ctypedef void (* LPALGETBUFFER3F)(ALuint,ALenum,ALfloat *,ALfloat *,ALfloat *)
	ctypedef void (* LPALGETBUFFERFV)(ALuint,ALenum,ALfloat *)
	ctypedef void (* LPALGETBUFFERI)(ALuint,ALenum,ALint *)
	ctypedef void (* LPALGETBUFFER3I)(ALuint,ALenum,ALint *,ALint *,ALint *)
	ctypedef void (* LPALGETBUFFERIV)(ALuint,ALenum,ALint *)
	ctypedef void (* LPALDOPPLERFACTOR)(ALfloat)
	ctypedef void (* LPALDOPPLERVELOCITY)(ALfloat)
	ctypedef void (* LPALSPEEDOFSOUND)(ALfloat)
	ctypedef void (* LPALDISTANCEMODEL)(ALenum)

	#
	# Enums:
	#


	#
	# Structs:
	#


	#
	# Functions:
	#

	void alGetBufferiv(ALuint bid,ALenum param,ALint * values)
	void alGetBuffer3i(ALuint bid,ALenum param,ALint * value1,ALint * value2,ALint * value3)
	void alGetSource3i(ALuint sid,ALenum param,ALint * value1,ALint * value2,ALint * value3)
	void alDistanceModel(ALenum distanceModel)
	void alSourceRewindv(ALsizei ns,const ALuint * sids)
	void alGetListener3f(ALenum param,ALfloat * value1,ALfloat * value2,ALfloat * value3)
	void alGetListener3i(ALenum param,ALint * value1,ALint * value2,ALint * value3)
	void alDisable(ALenum capability)
	void alDopplerFactor(ALfloat value)
	void alDeleteBuffers(ALsizei n,const ALuint * buffers)
	void alGetSourcefv(ALuint sid,ALenum param,ALfloat * values)
	void alGetDoublev(ALenum param,ALdouble * data)
	void alSourceRewind(ALuint sid)
	void alGetSourceiv(ALuint sid,ALenum param,ALint * values)
	void alSourceStop(ALuint sid)
	void alSpeedOfSound(ALfloat value)
	void alSourceStopv(ALsizei ns,const ALuint * sids)
	void alListener3f(ALenum param,ALfloat value1,ALfloat value2,ALfloat value3)
	void alListener3i(ALenum param,ALint value1,ALint value2,ALint value3)
	void alSourcei(ALuint sid,ALenum param,ALint value)
	void alGetListenerfv(ALenum param,ALfloat * values)
	ALenum alGetEnumValue(const ALchar * ename)
	void alSourcePausev(ALsizei ns,const ALuint * sids)
	void alGetListeneriv(ALenum param,ALint * values)
	ALfloat alGetFloat(ALenum param)
	ALboolean alGetBoolean(ALenum param)
	void alSourcePause(ALuint sid)
	ALint alGetInteger(ALenum param)
	void alSourcef(ALuint sid,ALenum param,ALfloat value)
	void alBufferf(ALuint bid,ALenum param,ALfloat value)
	ALenum alGetError()
	void alDopplerVelocity(ALfloat value)
	void alBufferiv(ALuint bid,ALenum param,const ALint * values)
	void alListenerfv(ALenum param,const ALfloat * values)
	void alListeneriv(ALenum param,const ALint * values)
	void alSourceUnqueueBuffers(ALuint sid,ALsizei numEntries,ALuint * bids)
	void alGetBufferi(ALuint bid,ALenum param,ALint * value)
	void alGetSource3f(ALuint sid,ALenum param,ALfloat * value1,ALfloat * value2,ALfloat * value3)
	void alBuffer3f(ALuint bid,ALenum param,ALfloat value1,ALfloat value2,ALfloat value3)
	void alBuffer3i(ALuint bid,ALenum param,ALint value1,ALint value2,ALint value3)
	void alDeleteSources(ALsizei n,const ALuint * sources)
	ALboolean alIsEnabled(ALenum capability)
	const ALchar * alGetString(ALenum param)
	void alGenBuffers(ALsizei n,ALuint * buffers)
	ALboolean alIsExtensionPresent(const ALchar * extname)
	void alEnable(ALenum capability)
	void alBufferData(ALuint bid,ALenum format,const ALvoid * data,ALsizei size,ALsizei freq)
	ALdouble alGetDouble(ALenum param)
	void alGetFloatv(ALenum param,ALfloat * data)
	ALboolean alIsSource(ALuint sid)
	void alListeneri(ALenum param,ALint value)
	void alBufferfv(ALuint bid,ALenum param,const ALfloat * values)
	void alGetListenerf(ALenum param,ALfloat * value)
	void alGetListeneri(ALenum param,ALint * value)
	void alSource3f(ALuint sid,ALenum param,ALfloat value1,ALfloat value2,ALfloat value3)
	void alSource3i(ALuint sid,ALenum param,ALint value1,ALint value2,ALint value3)
	void alGetBuffer3f(ALuint bid,ALenum param,ALfloat * value1,ALfloat * value2,ALfloat * value3)
	void alGetBufferf(ALuint bid,ALenum param,ALfloat * value)
	void * alGetProcAddress(const ALchar * fname)
	void alSourcePlayv(ALsizei ns,const ALuint * sids)
	void alGetSourcef(ALuint sid,ALenum param,ALfloat * value)
	void alGetSourcei(ALuint sid,ALenum param,ALint * value)
	void alSourceQueueBuffers(ALuint sid,ALsizei numEntries,const ALuint * bids)
	void alGetBooleanv(ALenum param,ALboolean * data)
	void alListenerf(ALenum param,ALfloat value)
	void alGetIntegerv(ALenum param,ALint * data)
	void alGenSources(ALsizei n,ALuint * sources)
	void alSourcePlay(ALuint sid)
	ALboolean alIsBuffer(ALuint bid)
	void alBufferi(ALuint bid,ALenum param,ALint value)
	void alSourcefv(ALuint sid,ALenum param,const ALfloat * values)
	void alGetBufferfv(ALuint bid,ALenum param,ALfloat * values)
	void alSourceiv(ALuint sid,ALenum param,const ALint * values)